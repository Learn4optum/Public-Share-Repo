# ---------------------------------------------
# File: 01-aks-workload-identity.tf
# Enables Workload Identity and OIDC on AKS cluster
# ---------------------------------------------
resource "azurerm_kubernetes_cluster" "aks" {
  name                = var.aks_name
  location            = var.location
  resource_group_name = var.rg_name
  dns_prefix          = var.dns_prefix

  identity {
    type = "SystemAssigned"
  }

  oidc_issuer_enabled        = true
  workload_identity_enabled  = true

  default_node_pool {
    name       = "default"
    node_count = 2
    vm_size    = "Standard_DS2_v2"
  }

  # other config as needed
}

output "aks_oidc_issuer_url" {
  value = azurerm_kubernetes_cluster.aks.oidc_issuer_url
}


# ---------------------------------------------
# File: 02-uami.tf
# Creates a User Assigned Managed Identity (UAMI)
# ---------------------------------------------
resource "azurerm_user_assigned_identity" "uami" {
  name                = var.uami_name
  location            = var.location
  resource_group_name = var.rg_name
}

output "uami_client_id" {
  value = azurerm_user_assigned_identity.uami.client_id
}

output "uami_resource_id" {
  value = azurerm_user_assigned_identity.uami.id
}


# ---------------------------------------------
# File: 03-federated-credential.tf
# Federate UAMI with AKS Service Account using OIDC
# ---------------------------------------------
data "azurerm_kubernetes_cluster" "aks" {
  name                = var.aks_name
  resource_group_name = var.rg_name
}

resource "azurerm_federated_identity_credential" "federation" {
  name                = "kv-access"
  resource_group_name = var.rg_name
  parent_id           = azurerm_user_assigned_identity.uami.id
  audience            = ["api://AzureADTokenExchange"]
  issuer              = data.azurerm_kubernetes_cluster.aks.oidc_issuer_url
  subject             = "system:serviceaccount:${var.k8s_namespace}:${var.k8s_sa_name}"
}


# ---------------------------------------------
# File: 04-kv-access-policy.tf
# Assign Key Vault access policy to UAMI
# ---------------------------------------------
resource "azurerm_key_vault_access_policy" "kv_policy" {
  key_vault_id = var.kv_id

  tenant_id = data.azurerm_client_config.current.tenant_id
  object_id = azurerm_user_assigned_identity.uami.principal_id

  secret_permissions = [
    "Get"
  ]
}

data "azurerm_client_config" "current" {}


# ---------------------------------------------
# File: variables.tf
# ---------------------------------------------
variable "aks_name" {}
variable "rg_name" {}
variable "location" {}
variable "dns_prefix" {}
variable "uami_name" {}
variable "kv_id" {}
variable "k8s_namespace" {}
variable "k8s_sa_name" {}


# ---------------------------------------------
# File: terraform.tfvars
# ---------------------------------------------
aks_name        = "my-aks-cluster"
rg_name         = "my-resource-group"
location        = "eastus"
dns_prefix      = "myaks"
uami_name       = "mesdev-uami"
kv_id           = "/subscriptions/<sub-id>/resourceGroups/my-resource-group/providers/Microsoft.KeyVault/vaults/mesdevkv"
k8s_namespace   = "mes-dev"
k8s_sa_name     = "kv-reader-sa"
